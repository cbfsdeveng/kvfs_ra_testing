// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: change_log.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "change_log.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pqfs {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* ChangeLogEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChangeLogEntry_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ChangeLogEntry_Operation_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_change_5flog_2eproto() {
  protobuf_AddDesc_change_5flog_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "change_log.proto");
  GOOGLE_CHECK(file != NULL);
  ChangeLogEntry_descriptor_ = file->message_type(0);
  static const int ChangeLogEntry_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogEntry, xid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogEntry, timestamp_micros_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogEntry, fs_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogEntry, inode_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogEntry, operation_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogEntry, new_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogEntry, old_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogEntry, spared_xid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogEntry, parent_inode_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogEntry, begin_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogEntry, end_offset_),
  };
  ChangeLogEntry_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChangeLogEntry_descriptor_,
      ChangeLogEntry::default_instance_,
      ChangeLogEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogEntry, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogEntry, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChangeLogEntry));
  ChangeLogEntry_Operation_descriptor_ = ChangeLogEntry_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_change_5flog_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChangeLogEntry_descriptor_, &ChangeLogEntry::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_change_5flog_2eproto() {
  delete ChangeLogEntry::default_instance_;
  delete ChangeLogEntry_reflection_;
}

void protobuf_AddDesc_change_5flog_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020change_log.proto\022\npqfs.proto\"\350\003\n\016Chang"
    "eLogEntry\022\013\n\003xid\030\001 \002(\003\022\030\n\020timestamp_micr"
    "os\030\002 \001(\003\022\r\n\005fs_id\030\003 \001(\003\022\021\n\tinode_num\030\004 \001"
    "(\003\022=\n\toperation\030\005 \001(\0162$.pqfs.proto.Chang"
    "eLogEntry.Operation:\004NONE\022\020\n\010new_name\030\006 "
    "\001(\t\022\020\n\010old_name\030\007 \001(\t\022\022\n\nspared_xid\030\010 \001("
    "\003\022\030\n\020parent_inode_num\030\t \001(\003\022\024\n\014begin_off"
    "set\030\n \001(\003\022\022\n\nend_offset\030\013 \001(\003\"\321\001\n\tOperat"
    "ion\022\010\n\004NONE\020\000\022\010\n\004ROOT\020\001\022\t\n\005MKDIR\020\002\022\t\n\005RM"
    "DIR\020\003\022\t\n\005CREAT\020\004\022\010\n\004LINK\020\005\022\n\n\006UNLINK\020\006\022\013"
    "\n\007SYMLINK\020\007\022\n\n\006RENAME\020\010\022\013\n\007SETATTR\020\t\022\014\n\010"
    "SETXATTR\020\n\022\n\n\006COMMIT\020\013\022\014\n\010TRUNCATE\020\014\022\t\n\005"
    "MKNOD\020\r\022\010\n\004NEWF\020\016\022\t\n\005DELFS\020\017\022\013\n\007INVALID\020"
    "\020", 521);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "change_log.proto", &protobuf_RegisterTypes);
  ChangeLogEntry::default_instance_ = new ChangeLogEntry();
  ChangeLogEntry::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_change_5flog_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_change_5flog_2eproto {
  StaticDescriptorInitializer_change_5flog_2eproto() {
    protobuf_AddDesc_change_5flog_2eproto();
  }
} static_descriptor_initializer_change_5flog_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* ChangeLogEntry_Operation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChangeLogEntry_Operation_descriptor_;
}
bool ChangeLogEntry_Operation_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const ChangeLogEntry_Operation ChangeLogEntry::NONE;
const ChangeLogEntry_Operation ChangeLogEntry::ROOT;
const ChangeLogEntry_Operation ChangeLogEntry::MKDIR;
const ChangeLogEntry_Operation ChangeLogEntry::RMDIR;
const ChangeLogEntry_Operation ChangeLogEntry::CREAT;
const ChangeLogEntry_Operation ChangeLogEntry::LINK;
const ChangeLogEntry_Operation ChangeLogEntry::UNLINK;
const ChangeLogEntry_Operation ChangeLogEntry::SYMLINK;
const ChangeLogEntry_Operation ChangeLogEntry::RENAME;
const ChangeLogEntry_Operation ChangeLogEntry::SETATTR;
const ChangeLogEntry_Operation ChangeLogEntry::SETXATTR;
const ChangeLogEntry_Operation ChangeLogEntry::COMMIT;
const ChangeLogEntry_Operation ChangeLogEntry::TRUNCATE;
const ChangeLogEntry_Operation ChangeLogEntry::MKNOD;
const ChangeLogEntry_Operation ChangeLogEntry::NEWF;
const ChangeLogEntry_Operation ChangeLogEntry::DELFS;
const ChangeLogEntry_Operation ChangeLogEntry::INVALID;
const ChangeLogEntry_Operation ChangeLogEntry::Operation_MIN;
const ChangeLogEntry_Operation ChangeLogEntry::Operation_MAX;
const int ChangeLogEntry::Operation_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int ChangeLogEntry::kXidFieldNumber;
const int ChangeLogEntry::kTimestampMicrosFieldNumber;
const int ChangeLogEntry::kFsIdFieldNumber;
const int ChangeLogEntry::kInodeNumFieldNumber;
const int ChangeLogEntry::kOperationFieldNumber;
const int ChangeLogEntry::kNewNameFieldNumber;
const int ChangeLogEntry::kOldNameFieldNumber;
const int ChangeLogEntry::kSparedXidFieldNumber;
const int ChangeLogEntry::kParentInodeNumFieldNumber;
const int ChangeLogEntry::kBeginOffsetFieldNumber;
const int ChangeLogEntry::kEndOffsetFieldNumber;
#endif  // !_MSC_VER

ChangeLogEntry::ChangeLogEntry()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pqfs.proto.ChangeLogEntry)
}

void ChangeLogEntry::InitAsDefaultInstance() {
}

ChangeLogEntry::ChangeLogEntry(const ChangeLogEntry& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pqfs.proto.ChangeLogEntry)
}

void ChangeLogEntry::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  xid_ = GOOGLE_LONGLONG(0);
  timestamp_micros_ = GOOGLE_LONGLONG(0);
  fs_id_ = GOOGLE_LONGLONG(0);
  inode_num_ = GOOGLE_LONGLONG(0);
  operation_ = 0;
  new_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  old_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spared_xid_ = GOOGLE_LONGLONG(0);
  parent_inode_num_ = GOOGLE_LONGLONG(0);
  begin_offset_ = GOOGLE_LONGLONG(0);
  end_offset_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChangeLogEntry::~ChangeLogEntry() {
  // @@protoc_insertion_point(destructor:pqfs.proto.ChangeLogEntry)
  SharedDtor();
}

void ChangeLogEntry::SharedDtor() {
  if (new_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete new_name_;
  }
  if (old_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete old_name_;
  }
  if (this != default_instance_) {
  }
}

void ChangeLogEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeLogEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChangeLogEntry_descriptor_;
}

const ChangeLogEntry& ChangeLogEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_change_5flog_2eproto();
  return *default_instance_;
}

ChangeLogEntry* ChangeLogEntry::default_instance_ = NULL;

ChangeLogEntry* ChangeLogEntry::New() const {
  return new ChangeLogEntry;
}

void ChangeLogEntry::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ChangeLogEntry*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(xid_, inode_num_);
    operation_ = 0;
    if (has_new_name()) {
      if (new_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        new_name_->clear();
      }
    }
    if (has_old_name()) {
      if (old_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        old_name_->clear();
      }
    }
    spared_xid_ = GOOGLE_LONGLONG(0);
  }
  ZR_(parent_inode_num_, end_offset_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChangeLogEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pqfs.proto.ChangeLogEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 xid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &xid_)));
          set_has_xid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_timestamp_micros;
        break;
      }

      // optional int64 timestamp_micros = 2;
      case 2: {
        if (tag == 16) {
         parse_timestamp_micros:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_micros_)));
          set_has_timestamp_micros();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_fs_id;
        break;
      }

      // optional int64 fs_id = 3;
      case 3: {
        if (tag == 24) {
         parse_fs_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fs_id_)));
          set_has_fs_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_inode_num;
        break;
      }

      // optional int64 inode_num = 4;
      case 4: {
        if (tag == 32) {
         parse_inode_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &inode_num_)));
          set_has_inode_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_operation;
        break;
      }

      // optional .pqfs.proto.ChangeLogEntry.Operation operation = 5 [default = NONE];
      case 5: {
        if (tag == 40) {
         parse_operation:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pqfs::proto::ChangeLogEntry_Operation_IsValid(value)) {
            set_operation(static_cast< ::pqfs::proto::ChangeLogEntry_Operation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_new_name;
        break;
      }

      // optional string new_name = 6;
      case 6: {
        if (tag == 50) {
         parse_new_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->new_name().data(), this->new_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "new_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_old_name;
        break;
      }

      // optional string old_name = 7;
      case 7: {
        if (tag == 58) {
         parse_old_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_old_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->old_name().data(), this->old_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "old_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_spared_xid;
        break;
      }

      // optional int64 spared_xid = 8;
      case 8: {
        if (tag == 64) {
         parse_spared_xid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &spared_xid_)));
          set_has_spared_xid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_parent_inode_num;
        break;
      }

      // optional int64 parent_inode_num = 9;
      case 9: {
        if (tag == 72) {
         parse_parent_inode_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &parent_inode_num_)));
          set_has_parent_inode_num();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_begin_offset;
        break;
      }

      // optional int64 begin_offset = 10;
      case 10: {
        if (tag == 80) {
         parse_begin_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &begin_offset_)));
          set_has_begin_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_end_offset;
        break;
      }

      // optional int64 end_offset = 11;
      case 11: {
        if (tag == 88) {
         parse_end_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_offset_)));
          set_has_end_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pqfs.proto.ChangeLogEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pqfs.proto.ChangeLogEntry)
  return false;
#undef DO_
}

void ChangeLogEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pqfs.proto.ChangeLogEntry)
  // required int64 xid = 1;
  if (has_xid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->xid(), output);
  }

  // optional int64 timestamp_micros = 2;
  if (has_timestamp_micros()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp_micros(), output);
  }

  // optional int64 fs_id = 3;
  if (has_fs_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->fs_id(), output);
  }

  // optional int64 inode_num = 4;
  if (has_inode_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->inode_num(), output);
  }

  // optional .pqfs.proto.ChangeLogEntry.Operation operation = 5 [default = NONE];
  if (has_operation()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->operation(), output);
  }

  // optional string new_name = 6;
  if (has_new_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_name().data(), this->new_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "new_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->new_name(), output);
  }

  // optional string old_name = 7;
  if (has_old_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_name().data(), this->old_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "old_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->old_name(), output);
  }

  // optional int64 spared_xid = 8;
  if (has_spared_xid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->spared_xid(), output);
  }

  // optional int64 parent_inode_num = 9;
  if (has_parent_inode_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->parent_inode_num(), output);
  }

  // optional int64 begin_offset = 10;
  if (has_begin_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->begin_offset(), output);
  }

  // optional int64 end_offset = 11;
  if (has_end_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(11, this->end_offset(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pqfs.proto.ChangeLogEntry)
}

::google::protobuf::uint8* ChangeLogEntry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pqfs.proto.ChangeLogEntry)
  // required int64 xid = 1;
  if (has_xid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->xid(), target);
  }

  // optional int64 timestamp_micros = 2;
  if (has_timestamp_micros()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp_micros(), target);
  }

  // optional int64 fs_id = 3;
  if (has_fs_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->fs_id(), target);
  }

  // optional int64 inode_num = 4;
  if (has_inode_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->inode_num(), target);
  }

  // optional .pqfs.proto.ChangeLogEntry.Operation operation = 5 [default = NONE];
  if (has_operation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->operation(), target);
  }

  // optional string new_name = 6;
  if (has_new_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_name().data(), this->new_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "new_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->new_name(), target);
  }

  // optional string old_name = 7;
  if (has_old_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_name().data(), this->old_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "old_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->old_name(), target);
  }

  // optional int64 spared_xid = 8;
  if (has_spared_xid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->spared_xid(), target);
  }

  // optional int64 parent_inode_num = 9;
  if (has_parent_inode_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->parent_inode_num(), target);
  }

  // optional int64 begin_offset = 10;
  if (has_begin_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->begin_offset(), target);
  }

  // optional int64 end_offset = 11;
  if (has_end_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(11, this->end_offset(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pqfs.proto.ChangeLogEntry)
  return target;
}

int ChangeLogEntry::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 xid = 1;
    if (has_xid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->xid());
    }

    // optional int64 timestamp_micros = 2;
    if (has_timestamp_micros()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp_micros());
    }

    // optional int64 fs_id = 3;
    if (has_fs_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fs_id());
    }

    // optional int64 inode_num = 4;
    if (has_inode_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->inode_num());
    }

    // optional .pqfs.proto.ChangeLogEntry.Operation operation = 5 [default = NONE];
    if (has_operation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation());
    }

    // optional string new_name = 6;
    if (has_new_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->new_name());
    }

    // optional string old_name = 7;
    if (has_old_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->old_name());
    }

    // optional int64 spared_xid = 8;
    if (has_spared_xid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->spared_xid());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 parent_inode_num = 9;
    if (has_parent_inode_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->parent_inode_num());
    }

    // optional int64 begin_offset = 10;
    if (has_begin_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->begin_offset());
    }

    // optional int64 end_offset = 11;
    if (has_end_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_offset());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeLogEntry::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChangeLogEntry* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChangeLogEntry*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChangeLogEntry::MergeFrom(const ChangeLogEntry& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_xid()) {
      set_xid(from.xid());
    }
    if (from.has_timestamp_micros()) {
      set_timestamp_micros(from.timestamp_micros());
    }
    if (from.has_fs_id()) {
      set_fs_id(from.fs_id());
    }
    if (from.has_inode_num()) {
      set_inode_num(from.inode_num());
    }
    if (from.has_operation()) {
      set_operation(from.operation());
    }
    if (from.has_new_name()) {
      set_new_name(from.new_name());
    }
    if (from.has_old_name()) {
      set_old_name(from.old_name());
    }
    if (from.has_spared_xid()) {
      set_spared_xid(from.spared_xid());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_parent_inode_num()) {
      set_parent_inode_num(from.parent_inode_num());
    }
    if (from.has_begin_offset()) {
      set_begin_offset(from.begin_offset());
    }
    if (from.has_end_offset()) {
      set_end_offset(from.end_offset());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChangeLogEntry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeLogEntry::CopyFrom(const ChangeLogEntry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeLogEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ChangeLogEntry::Swap(ChangeLogEntry* other) {
  if (other != this) {
    std::swap(xid_, other->xid_);
    std::swap(timestamp_micros_, other->timestamp_micros_);
    std::swap(fs_id_, other->fs_id_);
    std::swap(inode_num_, other->inode_num_);
    std::swap(operation_, other->operation_);
    std::swap(new_name_, other->new_name_);
    std::swap(old_name_, other->old_name_);
    std::swap(spared_xid_, other->spared_xid_);
    std::swap(parent_inode_num_, other->parent_inode_num_);
    std::swap(begin_offset_, other->begin_offset_);
    std::swap(end_offset_, other->end_offset_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChangeLogEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChangeLogEntry_descriptor_;
  metadata.reflection = ChangeLogEntry_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace pqfs

// @@protoc_insertion_point(global_scope)
