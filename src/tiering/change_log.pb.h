// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: change_log.proto

#ifndef PROTOBUF_change_5flog_2eproto__INCLUDED
#define PROTOBUF_change_5flog_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pqfs {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_change_5flog_2eproto();
void protobuf_AssignDesc_change_5flog_2eproto();
void protobuf_ShutdownFile_change_5flog_2eproto();

class ChangeLogEntry;

enum ChangeLogEntry_Operation {
  ChangeLogEntry_Operation_NONE = 0,
  ChangeLogEntry_Operation_ROOT = 1,
  ChangeLogEntry_Operation_MKDIR = 2,
  ChangeLogEntry_Operation_RMDIR = 3,
  ChangeLogEntry_Operation_CREAT = 4,
  ChangeLogEntry_Operation_LINK = 5,
  ChangeLogEntry_Operation_UNLINK = 6,
  ChangeLogEntry_Operation_SYMLINK = 7,
  ChangeLogEntry_Operation_RENAME = 8,
  ChangeLogEntry_Operation_SETATTR = 9,
  ChangeLogEntry_Operation_SETXATTR = 10,
  ChangeLogEntry_Operation_COMMIT = 11,
  ChangeLogEntry_Operation_TRUNCATE = 12,
  ChangeLogEntry_Operation_MKNOD = 13,
  ChangeLogEntry_Operation_NEWF = 14,
  ChangeLogEntry_Operation_DELFS = 15,
  ChangeLogEntry_Operation_INVALID = 16
};
bool ChangeLogEntry_Operation_IsValid(int value);
const ChangeLogEntry_Operation ChangeLogEntry_Operation_Operation_MIN = ChangeLogEntry_Operation_NONE;
const ChangeLogEntry_Operation ChangeLogEntry_Operation_Operation_MAX = ChangeLogEntry_Operation_INVALID;
const int ChangeLogEntry_Operation_Operation_ARRAYSIZE = ChangeLogEntry_Operation_Operation_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChangeLogEntry_Operation_descriptor();
inline const ::std::string& ChangeLogEntry_Operation_Name(ChangeLogEntry_Operation value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChangeLogEntry_Operation_descriptor(), value);
}
inline bool ChangeLogEntry_Operation_Parse(
    const ::std::string& name, ChangeLogEntry_Operation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeLogEntry_Operation>(
    ChangeLogEntry_Operation_descriptor(), name, value);
}
// ===================================================================

class ChangeLogEntry : public ::google::protobuf::Message {
 public:
  ChangeLogEntry();
  virtual ~ChangeLogEntry();

  ChangeLogEntry(const ChangeLogEntry& from);

  inline ChangeLogEntry& operator=(const ChangeLogEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeLogEntry& default_instance();

  void Swap(ChangeLogEntry* other);

  // implements Message ----------------------------------------------

  ChangeLogEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangeLogEntry& from);
  void MergeFrom(const ChangeLogEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ChangeLogEntry_Operation Operation;
  static const Operation NONE = ChangeLogEntry_Operation_NONE;
  static const Operation ROOT = ChangeLogEntry_Operation_ROOT;
  static const Operation MKDIR = ChangeLogEntry_Operation_MKDIR;
  static const Operation RMDIR = ChangeLogEntry_Operation_RMDIR;
  static const Operation CREAT = ChangeLogEntry_Operation_CREAT;
  static const Operation LINK = ChangeLogEntry_Operation_LINK;
  static const Operation UNLINK = ChangeLogEntry_Operation_UNLINK;
  static const Operation SYMLINK = ChangeLogEntry_Operation_SYMLINK;
  static const Operation RENAME = ChangeLogEntry_Operation_RENAME;
  static const Operation SETATTR = ChangeLogEntry_Operation_SETATTR;
  static const Operation SETXATTR = ChangeLogEntry_Operation_SETXATTR;
  static const Operation COMMIT = ChangeLogEntry_Operation_COMMIT;
  static const Operation TRUNCATE = ChangeLogEntry_Operation_TRUNCATE;
  static const Operation MKNOD = ChangeLogEntry_Operation_MKNOD;
  static const Operation NEWF = ChangeLogEntry_Operation_NEWF;
  static const Operation DELFS = ChangeLogEntry_Operation_DELFS;
  static const Operation INVALID = ChangeLogEntry_Operation_INVALID;
  static inline bool Operation_IsValid(int value) {
    return ChangeLogEntry_Operation_IsValid(value);
  }
  static const Operation Operation_MIN =
    ChangeLogEntry_Operation_Operation_MIN;
  static const Operation Operation_MAX =
    ChangeLogEntry_Operation_Operation_MAX;
  static const int Operation_ARRAYSIZE =
    ChangeLogEntry_Operation_Operation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Operation_descriptor() {
    return ChangeLogEntry_Operation_descriptor();
  }
  static inline const ::std::string& Operation_Name(Operation value) {
    return ChangeLogEntry_Operation_Name(value);
  }
  static inline bool Operation_Parse(const ::std::string& name,
      Operation* value) {
    return ChangeLogEntry_Operation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int64 xid = 1;
  inline bool has_xid() const;
  inline void clear_xid();
  static const int kXidFieldNumber = 1;
  inline ::google::protobuf::int64 xid() const;
  inline void set_xid(::google::protobuf::int64 value);

  // optional int64 timestamp_micros = 2;
  inline bool has_timestamp_micros() const;
  inline void clear_timestamp_micros();
  static const int kTimestampMicrosFieldNumber = 2;
  inline ::google::protobuf::int64 timestamp_micros() const;
  inline void set_timestamp_micros(::google::protobuf::int64 value);

  // optional int64 fs_id = 3;
  inline bool has_fs_id() const;
  inline void clear_fs_id();
  static const int kFsIdFieldNumber = 3;
  inline ::google::protobuf::int64 fs_id() const;
  inline void set_fs_id(::google::protobuf::int64 value);

  // optional int64 inode_num = 4;
  inline bool has_inode_num() const;
  inline void clear_inode_num();
  static const int kInodeNumFieldNumber = 4;
  inline ::google::protobuf::int64 inode_num() const;
  inline void set_inode_num(::google::protobuf::int64 value);

  // optional .pqfs.proto.ChangeLogEntry.Operation operation = 5 [default = NONE];
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 5;
  inline ::pqfs::proto::ChangeLogEntry_Operation operation() const;
  inline void set_operation(::pqfs::proto::ChangeLogEntry_Operation value);

  // optional string new_name = 6;
  inline bool has_new_name() const;
  inline void clear_new_name();
  static const int kNewNameFieldNumber = 6;
  inline const ::std::string& new_name() const;
  inline void set_new_name(const ::std::string& value);
  inline void set_new_name(const char* value);
  inline void set_new_name(const char* value, size_t size);
  inline ::std::string* mutable_new_name();
  inline ::std::string* release_new_name();
  inline void set_allocated_new_name(::std::string* new_name);

  // optional string old_name = 7;
  inline bool has_old_name() const;
  inline void clear_old_name();
  static const int kOldNameFieldNumber = 7;
  inline const ::std::string& old_name() const;
  inline void set_old_name(const ::std::string& value);
  inline void set_old_name(const char* value);
  inline void set_old_name(const char* value, size_t size);
  inline ::std::string* mutable_old_name();
  inline ::std::string* release_old_name();
  inline void set_allocated_old_name(::std::string* old_name);

  // optional int64 spared_xid = 8;
  inline bool has_spared_xid() const;
  inline void clear_spared_xid();
  static const int kSparedXidFieldNumber = 8;
  inline ::google::protobuf::int64 spared_xid() const;
  inline void set_spared_xid(::google::protobuf::int64 value);

  // optional int64 parent_inode_num = 9;
  inline bool has_parent_inode_num() const;
  inline void clear_parent_inode_num();
  static const int kParentInodeNumFieldNumber = 9;
  inline ::google::protobuf::int64 parent_inode_num() const;
  inline void set_parent_inode_num(::google::protobuf::int64 value);

  // optional int64 begin_offset = 10;
  inline bool has_begin_offset() const;
  inline void clear_begin_offset();
  static const int kBeginOffsetFieldNumber = 10;
  inline ::google::protobuf::int64 begin_offset() const;
  inline void set_begin_offset(::google::protobuf::int64 value);

  // optional int64 end_offset = 11;
  inline bool has_end_offset() const;
  inline void clear_end_offset();
  static const int kEndOffsetFieldNumber = 11;
  inline ::google::protobuf::int64 end_offset() const;
  inline void set_end_offset(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pqfs.proto.ChangeLogEntry)
 private:
  inline void set_has_xid();
  inline void clear_has_xid();
  inline void set_has_timestamp_micros();
  inline void clear_has_timestamp_micros();
  inline void set_has_fs_id();
  inline void clear_has_fs_id();
  inline void set_has_inode_num();
  inline void clear_has_inode_num();
  inline void set_has_operation();
  inline void clear_has_operation();
  inline void set_has_new_name();
  inline void clear_has_new_name();
  inline void set_has_old_name();
  inline void clear_has_old_name();
  inline void set_has_spared_xid();
  inline void clear_has_spared_xid();
  inline void set_has_parent_inode_num();
  inline void clear_has_parent_inode_num();
  inline void set_has_begin_offset();
  inline void clear_has_begin_offset();
  inline void set_has_end_offset();
  inline void clear_has_end_offset();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 xid_;
  ::google::protobuf::int64 timestamp_micros_;
  ::google::protobuf::int64 fs_id_;
  ::google::protobuf::int64 inode_num_;
  ::std::string* new_name_;
  ::std::string* old_name_;
  ::google::protobuf::int64 spared_xid_;
  ::google::protobuf::int64 parent_inode_num_;
  ::google::protobuf::int64 begin_offset_;
  ::google::protobuf::int64 end_offset_;
  int operation_;
  friend void  protobuf_AddDesc_change_5flog_2eproto();
  friend void protobuf_AssignDesc_change_5flog_2eproto();
  friend void protobuf_ShutdownFile_change_5flog_2eproto();

  void InitAsDefaultInstance();
  static ChangeLogEntry* default_instance_;
};
// ===================================================================


// ===================================================================

// ChangeLogEntry

// required int64 xid = 1;
inline bool ChangeLogEntry::has_xid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangeLogEntry::set_has_xid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangeLogEntry::clear_has_xid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangeLogEntry::clear_xid() {
  xid_ = GOOGLE_LONGLONG(0);
  clear_has_xid();
}
inline ::google::protobuf::int64 ChangeLogEntry::xid() const {
  // @@protoc_insertion_point(field_get:pqfs.proto.ChangeLogEntry.xid)
  return xid_;
}
inline void ChangeLogEntry::set_xid(::google::protobuf::int64 value) {
  set_has_xid();
  xid_ = value;
  // @@protoc_insertion_point(field_set:pqfs.proto.ChangeLogEntry.xid)
}

// optional int64 timestamp_micros = 2;
inline bool ChangeLogEntry::has_timestamp_micros() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangeLogEntry::set_has_timestamp_micros() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangeLogEntry::clear_has_timestamp_micros() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangeLogEntry::clear_timestamp_micros() {
  timestamp_micros_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp_micros();
}
inline ::google::protobuf::int64 ChangeLogEntry::timestamp_micros() const {
  // @@protoc_insertion_point(field_get:pqfs.proto.ChangeLogEntry.timestamp_micros)
  return timestamp_micros_;
}
inline void ChangeLogEntry::set_timestamp_micros(::google::protobuf::int64 value) {
  set_has_timestamp_micros();
  timestamp_micros_ = value;
  // @@protoc_insertion_point(field_set:pqfs.proto.ChangeLogEntry.timestamp_micros)
}

// optional int64 fs_id = 3;
inline bool ChangeLogEntry::has_fs_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChangeLogEntry::set_has_fs_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChangeLogEntry::clear_has_fs_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChangeLogEntry::clear_fs_id() {
  fs_id_ = GOOGLE_LONGLONG(0);
  clear_has_fs_id();
}
inline ::google::protobuf::int64 ChangeLogEntry::fs_id() const {
  // @@protoc_insertion_point(field_get:pqfs.proto.ChangeLogEntry.fs_id)
  return fs_id_;
}
inline void ChangeLogEntry::set_fs_id(::google::protobuf::int64 value) {
  set_has_fs_id();
  fs_id_ = value;
  // @@protoc_insertion_point(field_set:pqfs.proto.ChangeLogEntry.fs_id)
}

// optional int64 inode_num = 4;
inline bool ChangeLogEntry::has_inode_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChangeLogEntry::set_has_inode_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChangeLogEntry::clear_has_inode_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChangeLogEntry::clear_inode_num() {
  inode_num_ = GOOGLE_LONGLONG(0);
  clear_has_inode_num();
}
inline ::google::protobuf::int64 ChangeLogEntry::inode_num() const {
  // @@protoc_insertion_point(field_get:pqfs.proto.ChangeLogEntry.inode_num)
  return inode_num_;
}
inline void ChangeLogEntry::set_inode_num(::google::protobuf::int64 value) {
  set_has_inode_num();
  inode_num_ = value;
  // @@protoc_insertion_point(field_set:pqfs.proto.ChangeLogEntry.inode_num)
}

// optional .pqfs.proto.ChangeLogEntry.Operation operation = 5 [default = NONE];
inline bool ChangeLogEntry::has_operation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChangeLogEntry::set_has_operation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChangeLogEntry::clear_has_operation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChangeLogEntry::clear_operation() {
  operation_ = 0;
  clear_has_operation();
}
inline ::pqfs::proto::ChangeLogEntry_Operation ChangeLogEntry::operation() const {
  // @@protoc_insertion_point(field_get:pqfs.proto.ChangeLogEntry.operation)
  return static_cast< ::pqfs::proto::ChangeLogEntry_Operation >(operation_);
}
inline void ChangeLogEntry::set_operation(::pqfs::proto::ChangeLogEntry_Operation value) {
  assert(::pqfs::proto::ChangeLogEntry_Operation_IsValid(value));
  set_has_operation();
  operation_ = value;
  // @@protoc_insertion_point(field_set:pqfs.proto.ChangeLogEntry.operation)
}

// optional string new_name = 6;
inline bool ChangeLogEntry::has_new_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChangeLogEntry::set_has_new_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChangeLogEntry::clear_has_new_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChangeLogEntry::clear_new_name() {
  if (new_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    new_name_->clear();
  }
  clear_has_new_name();
}
inline const ::std::string& ChangeLogEntry::new_name() const {
  // @@protoc_insertion_point(field_get:pqfs.proto.ChangeLogEntry.new_name)
  return *new_name_;
}
inline void ChangeLogEntry::set_new_name(const ::std::string& value) {
  set_has_new_name();
  if (new_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    new_name_ = new ::std::string;
  }
  new_name_->assign(value);
  // @@protoc_insertion_point(field_set:pqfs.proto.ChangeLogEntry.new_name)
}
inline void ChangeLogEntry::set_new_name(const char* value) {
  set_has_new_name();
  if (new_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    new_name_ = new ::std::string;
  }
  new_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:pqfs.proto.ChangeLogEntry.new_name)
}
inline void ChangeLogEntry::set_new_name(const char* value, size_t size) {
  set_has_new_name();
  if (new_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    new_name_ = new ::std::string;
  }
  new_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pqfs.proto.ChangeLogEntry.new_name)
}
inline ::std::string* ChangeLogEntry::mutable_new_name() {
  set_has_new_name();
  if (new_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    new_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pqfs.proto.ChangeLogEntry.new_name)
  return new_name_;
}
inline ::std::string* ChangeLogEntry::release_new_name() {
  clear_has_new_name();
  if (new_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = new_name_;
    new_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChangeLogEntry::set_allocated_new_name(::std::string* new_name) {
  if (new_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete new_name_;
  }
  if (new_name) {
    set_has_new_name();
    new_name_ = new_name;
  } else {
    clear_has_new_name();
    new_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pqfs.proto.ChangeLogEntry.new_name)
}

// optional string old_name = 7;
inline bool ChangeLogEntry::has_old_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ChangeLogEntry::set_has_old_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ChangeLogEntry::clear_has_old_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ChangeLogEntry::clear_old_name() {
  if (old_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    old_name_->clear();
  }
  clear_has_old_name();
}
inline const ::std::string& ChangeLogEntry::old_name() const {
  // @@protoc_insertion_point(field_get:pqfs.proto.ChangeLogEntry.old_name)
  return *old_name_;
}
inline void ChangeLogEntry::set_old_name(const ::std::string& value) {
  set_has_old_name();
  if (old_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    old_name_ = new ::std::string;
  }
  old_name_->assign(value);
  // @@protoc_insertion_point(field_set:pqfs.proto.ChangeLogEntry.old_name)
}
inline void ChangeLogEntry::set_old_name(const char* value) {
  set_has_old_name();
  if (old_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    old_name_ = new ::std::string;
  }
  old_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:pqfs.proto.ChangeLogEntry.old_name)
}
inline void ChangeLogEntry::set_old_name(const char* value, size_t size) {
  set_has_old_name();
  if (old_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    old_name_ = new ::std::string;
  }
  old_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pqfs.proto.ChangeLogEntry.old_name)
}
inline ::std::string* ChangeLogEntry::mutable_old_name() {
  set_has_old_name();
  if (old_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    old_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:pqfs.proto.ChangeLogEntry.old_name)
  return old_name_;
}
inline ::std::string* ChangeLogEntry::release_old_name() {
  clear_has_old_name();
  if (old_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = old_name_;
    old_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChangeLogEntry::set_allocated_old_name(::std::string* old_name) {
  if (old_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete old_name_;
  }
  if (old_name) {
    set_has_old_name();
    old_name_ = old_name;
  } else {
    clear_has_old_name();
    old_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:pqfs.proto.ChangeLogEntry.old_name)
}

// optional int64 spared_xid = 8;
inline bool ChangeLogEntry::has_spared_xid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ChangeLogEntry::set_has_spared_xid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ChangeLogEntry::clear_has_spared_xid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ChangeLogEntry::clear_spared_xid() {
  spared_xid_ = GOOGLE_LONGLONG(0);
  clear_has_spared_xid();
}
inline ::google::protobuf::int64 ChangeLogEntry::spared_xid() const {
  // @@protoc_insertion_point(field_get:pqfs.proto.ChangeLogEntry.spared_xid)
  return spared_xid_;
}
inline void ChangeLogEntry::set_spared_xid(::google::protobuf::int64 value) {
  set_has_spared_xid();
  spared_xid_ = value;
  // @@protoc_insertion_point(field_set:pqfs.proto.ChangeLogEntry.spared_xid)
}

// optional int64 parent_inode_num = 9;
inline bool ChangeLogEntry::has_parent_inode_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ChangeLogEntry::set_has_parent_inode_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ChangeLogEntry::clear_has_parent_inode_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ChangeLogEntry::clear_parent_inode_num() {
  parent_inode_num_ = GOOGLE_LONGLONG(0);
  clear_has_parent_inode_num();
}
inline ::google::protobuf::int64 ChangeLogEntry::parent_inode_num() const {
  // @@protoc_insertion_point(field_get:pqfs.proto.ChangeLogEntry.parent_inode_num)
  return parent_inode_num_;
}
inline void ChangeLogEntry::set_parent_inode_num(::google::protobuf::int64 value) {
  set_has_parent_inode_num();
  parent_inode_num_ = value;
  // @@protoc_insertion_point(field_set:pqfs.proto.ChangeLogEntry.parent_inode_num)
}

// optional int64 begin_offset = 10;
inline bool ChangeLogEntry::has_begin_offset() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ChangeLogEntry::set_has_begin_offset() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ChangeLogEntry::clear_has_begin_offset() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ChangeLogEntry::clear_begin_offset() {
  begin_offset_ = GOOGLE_LONGLONG(0);
  clear_has_begin_offset();
}
inline ::google::protobuf::int64 ChangeLogEntry::begin_offset() const {
  // @@protoc_insertion_point(field_get:pqfs.proto.ChangeLogEntry.begin_offset)
  return begin_offset_;
}
inline void ChangeLogEntry::set_begin_offset(::google::protobuf::int64 value) {
  set_has_begin_offset();
  begin_offset_ = value;
  // @@protoc_insertion_point(field_set:pqfs.proto.ChangeLogEntry.begin_offset)
}

// optional int64 end_offset = 11;
inline bool ChangeLogEntry::has_end_offset() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ChangeLogEntry::set_has_end_offset() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ChangeLogEntry::clear_has_end_offset() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ChangeLogEntry::clear_end_offset() {
  end_offset_ = GOOGLE_LONGLONG(0);
  clear_has_end_offset();
}
inline ::google::protobuf::int64 ChangeLogEntry::end_offset() const {
  // @@protoc_insertion_point(field_get:pqfs.proto.ChangeLogEntry.end_offset)
  return end_offset_;
}
inline void ChangeLogEntry::set_end_offset(::google::protobuf::int64 value) {
  set_has_end_offset();
  end_offset_ = value;
  // @@protoc_insertion_point(field_set:pqfs.proto.ChangeLogEntry.end_offset)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace pqfs

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pqfs::proto::ChangeLogEntry_Operation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pqfs::proto::ChangeLogEntry_Operation>() {
  return ::pqfs::proto::ChangeLogEntry_Operation_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_change_5flog_2eproto__INCLUDED
